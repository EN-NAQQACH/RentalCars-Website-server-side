// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String   @unique
  password  String
  picture   String   @default("")
  googleId  String   @default("")
  about     String   @default("")
  number    String   @default("")
  cars      Car[]
  favorites Favorite[]
  chats     Chat[]   @relation(fields: [chatIDs], references: [id])
  chatIDs   String[] @db.ObjectId
}
model Car {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  location      String
  year          Int
  fuel          String
  Type          String
  price         Float
  model         String
  make          String
  distance      String
  transmission  String
  maxTrip       Int?
  minTrip       Int?
  doors         Int
  imageUrls     String[]
  features      String[]
  favorites     Favorite[]
  carSeats      Int
  description   String
  startTripDate String? 
  endTripDate   String?
  createdAt     DateTime @default(now())
  owner         User     @relation(fields: [userId], references: [id])
  userId        String   @db.ObjectId
}
model Favorite {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  user          User      @relation(fields: [userId], references: [id])
  car           Car       @relation(fields: [carId], references: [id])
  userId        String    @db.ObjectId
  carId         String    @db.ObjectId
  createdAt     DateTime @default(now())
}
model Chat {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  users         User[]    @relation(fields: [userIDs], references: [id])
  userIDs       String[]  @db.ObjectId
  time          DateTime  @default(now())
  seenBy        String[]  @db.ObjectId
  messages      Message[]
  lastMessage   String?
  lastMessageHour String?
}
model Message {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String
  chat      Chat      @relation(fields: [chatId], references: [id])
  chatId    String    @db.ObjectId
  time      DateTime  @default(now())
  hour      String?
  picture   String?
}
